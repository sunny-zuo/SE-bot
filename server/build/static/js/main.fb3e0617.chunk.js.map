{"version":3,"sources":["components/RuleCreationCard.js","components/RuleCard.js","App.js","reportWebVitals.js","index.js"],"names":["RuleCreationCard","props","useState","roles","setRoles","department","setDepartment","matchOption","setMatchOption","yearSelect","setYearSelect","programList","sort","Card","style","width","maxWidth","margin","padding","Title","paddingLeft","marginBottom","marginTop","Body","className","type","value","onChange","e","target","list","id","map","item","Button","onClick","addRule","split","role","trim","match","year","disabled","RuleCard","lineHeight","index","rule","roleName","BoxText","formatMatch","formatYear","key","text","border","marginLeft","marginRight","whiteSpace","App","rules","setRules","firstYear","setFirstYear","importVal","setImportVal","deleteIndex","setDeleteIndex","formatExport","formatted","baseYear","formattedRule","JSON","stringify","String","length","onDragEnd","result","destination","newRules","Array","from","splice","source","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","placeholder","_","variant","size","console","log","filter","Number","replace","userSelect","height","readOnly","importedJSON","parse","importedRule","newRule","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb3e0617.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nexport default function RuleCreationCard(props) {\r\n    const [roles, setRoles] = useState(\"\");\r\n    const [department, setDepartment] = useState(\"\");\r\n    const [matchOption, setMatchOption] = useState(\"exact\");\r\n    const [yearSelect, setYearSelect] = useState(\"all\");\r\n\r\n    const programList = [\"VPA/Software Engineering\",\r\n        \"MAT/Mathematics Computer Science\",\r\n        \"MAT/Mathematics\",\r\n        \"ENG/Mechanical & Mechatronics\",\r\n        \"ENG/Electrical and Computer\",\r\n        \"ENG/Engineering\",\r\n        \"ENG/Chemical\",\r\n        \"ENG/Architecture\",\r\n        \"ENG/MGMT Management Sciences\",\r\n        \"ENG/Systems Design\",\r\n        \"SCI/Science\",\r\n        \"SCI/Science Pharmacy\",\r\n        \"ENG/Civil & Environmental\",\r\n        \"ENV/Environment\",\r\n        \"Alumni\",\r\n        \"ART/Arts Accounting and Finance\",\r\n        \"ART/Arts\"].sort();\r\n\r\n    function addRule() {\r\n        props.addRule({\r\n            roles: roles.split(\",\").map(role => role.trim()),\r\n            department: (matchOption !== \"anything\") ? department : \"any\",\r\n            match: matchOption,\r\n            year: yearSelect\r\n        });\r\n\r\n        setRoles(\"\");\r\n        setDepartment(\"\");\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '80%', maxWidth: '850px', margin: 'auto', padding: '10px'}}>\r\n            <Card.Title style={{ paddingLeft: '20px', marginBottom: '0px', marginTop: '4px' }}>Add New Rule</Card.Title>\r\n            <Card.Body>\r\n                <p>Fill out field to create a new role assignment rule. To assign multiple roles, separate them with a comma.\r\n                For example, if I wanted to assign the <code>SE</code> and <code>ENG</code> role to someone,\r\n                I would put <code>SE,ENG</code> in the field.\r\n                Note that year comparison only fully works for classes with their 1A term in 2021 or later. Classes starting in 2020\r\n                can assign for lower years but can't distingush between upper years and equal years. Classes starting in 2019 should only rely\r\n                on the \"in any year\" option.\r\n                </p>\r\n                <hr/>\r\n                <div className=\"ruleText\">\r\n                    <h6>\r\n                        <span>I want to assign the role(s)&nbsp;<input type=\"text\" value={roles} onChange={(e) => setRoles(e.target.value)} /></span>\r\n                        <span>&nbsp;to users who's department/program&nbsp;\r\n                        <select value={matchOption} onChange={(e) => setMatchOption(e.target.value)}>\r\n                                <option value=\"exact\">is exactly</option>\r\n                                <option value=\"begins\">begins with</option>\r\n                                <option value=\"contains\">contains</option>\r\n                                <option value=\"anything\">is anything</option>\r\n                            </select>\r\n                        </span>\r\n                        {(matchOption !== \"anything\") && <span>&nbsp;the value of&nbsp;\r\n                        <input type=\"text\" list=\"programs\" value={department} onChange={(e) => setDepartment(e.target.value)} style={{ width: \"250px\" }} />\r\n                            <datalist id=\"programs\">{programList.map(item => <option key={item} value={item} />)}</datalist>\r\n                        </span>}\r\n                        <span>&nbsp;who are&nbsp;\r\n                        <select value={yearSelect} onChange={(e) => setYearSelect(e.target.value)}>\r\n                                <option value=\"all\">in any year</option>\r\n                                <option value=\"equal\">in the same year</option>\r\n                                <option value=\"upper\">upper years</option>\r\n                                <option value=\"lower\">lower years</option>\r\n                            </select>\r\n                        &nbsp;relative to my year.\r\n                        </span>\r\n                </h6>\r\n                </div>\r\n                {(roles && (department || matchOption === \"anything\")) ? <Button type=\"submit\" onClick={() => { addRule() }}>Add Rule</Button> : <Button type=\"submit\" disabled>Add Rule</Button>}\r\n            </Card.Body>\r\n            </Card>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nexport default function RuleCard(props) {\r\n    return (\r\n        <Card style={{ marginTop: \"4px\" }} key={props.rule.key}>\r\n            <Card.Body style={{ lineHeight: \"32px\" }}>\r\n                #{props.index + 1}: Assign the role(s){RoleValues(props.rule.roles)}to users who's department <b>{formatMatch(props.rule.match)}</b>\r\n                {(props.rule.match !== \"anything\") && BoxText(props.rule.department)}who are <b>{formatYear(props.rule.year)}</b>.\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction RoleValues(roles) {\r\n    return (\r\n        roles.map(roleName => BoxText(roleName))\r\n    )\r\n}\r\n\r\nfunction BoxText(text) {\r\n    return (\r\n        <span style={{ border: \"2px solid grey\", padding: \"1px\", marginLeft: \"4px\", marginRight: \"4px\", whiteSpace: \"nowrap\" }}>\r\n            {text}\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction formatMatch(match) {\r\n    if (match === \"exact\") {\r\n        return \"is exactly\";\r\n    }\r\n    else if (match === \"begins\") {\r\n        return \"begins with\";\r\n    }\r\n    else if (match === \"contains\") {\r\n        return \"contains\"\r\n    }\r\n    else if (match === \"anything\") {\r\n        return \"is anything \"\r\n    }\r\n    else {\r\n        return \"INVALID MATCH TYPE\"\r\n    }\r\n}\r\nfunction formatYear(year) {\r\n    if (year === \"all\") {\r\n        return \"in any year\";\r\n    }\r\n    else if (year === \"equal\") {\r\n        return \"in the same year\";\r\n    }\r\n    else if (year === \"upper\") {\r\n        return \"upper years\"\r\n    }\r\n    else if (year === \"lower\") {\r\n        return \"lower years\"\r\n    }\r\n    else {\r\n        return \"INVALID YEAR TYPE\"\r\n    }\r\n}","import React, {useState} from \"react\";\nimport RuleCreationCard from \"./components/RuleCreationCard\";\nimport RuleCard from \"./components/RuleCard\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { DragDropContext, Droppable, Draggable  } from 'react-beautiful-dnd';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [rules, setRules] = useState([]);\n  const [firstYear, setFirstYear] = useState(2021);\n  const [importVal, setImportVal] = useState(\"\");\n  const [deleteIndex, setDeleteIndex] = useState(-1);\n\n  function handleOnDragEnd(result) {\n    if (!result.destination) return;\n    const newRules = Array.from(rules);\n    const [reorderedItem] = newRules.splice(result.source.index, 1);\n    newRules.splice(result.destination.index, 0, reorderedItem);\n    setRules(newRules)\n  }\n\n  function addRule(rule) {\n    rule.key = \"rule\" + String(rules.length);\n    setRules([...rules, rule]);\n  }\n\n  function formatExport() {\n    const formatted = {\n      baseYear: firstYear,\n      rules: rules.map((rule, index) => {\n        const formattedRule = { ...rule }\n        delete formattedRule.key;\n        return formattedRule;\n      })\n    }\n    return JSON.stringify(formatted);\n  }\n\n  function importValues() {\n    try {\n      const importedJSON = JSON.parse(importVal);\n      const newRules = [];\n      for (const importedRule of importedJSON?.rules) {\n        console.log(importedRule);\n        if (importedRule.roles?.length > 0 && importedRule.department && importedRule.match && importedRule.year) {\n          const newRule = {};\n          newRule.roles = importedRule.roles;\n          newRule.department = importedRule.department;\n          newRule.match = importedRule.match;\n          newRule.year = importedRule.year;\n          newRule.key = \"rule\" + String(rules.length + newRules.length);\n          newRules.push(newRule);\n        }\n      }\n\n      setRules([...rules, ...newRules]);\n      setFirstYear(Number(importedJSON.baseYear));\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  function deleteByKey() {\n    console.log(deleteIndex);\n    if (deleteIndex >= 0 && deleteIndex < rules.length) {\n      setRules(rules.filter((_, index) => index !== Number(deleteIndex)));\n    }\n  }\n  return (\n    <div className=\"App\" style={{ marginTop: \"20px\"}}>\n      <RuleCreationCard addRule={addRule} />\n      <Card style={{ width: '80%', maxWidth: '850px', margin: 'auto', padding: '10px', marginTop: '20px' }}>\n        <Card.Title style={{ paddingLeft: '20px', marginBottom: '0px', marginTop: '4px' }}>Rules</Card.Title>\n        <Card.Body>\n          The first rule that matches a user will apply, starting from rule #1. I'd recommend including a catch-all rule so that\n          users who have an edge case department (or a department you didn't think of) can still verify. For example, departments might look weird for users currently\n          on a co-op term that are working for UWaterloo.\n          <br/>\n          <hr/>\n          <DragDropContext onDragEnd={handleOnDragEnd}>\n            <Droppable droppableId=\"rules\">\n              {(provided) => (\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {rules.map((rule, index) => {\n                    return (\n                      <Draggable key={rule.key} draggableId={rule.key} index={index}>\n                        {(provided) => (\n                          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                            <RuleCard rule={rule} index={index}/>\n                          </div>\n                        )}\n                      </Draggable>\n                    )\n                  })}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n\n          <h6 style={{ marginTop: \"12px\" }}>\n            Delete a Rule:&nbsp;\n            <select value={deleteIndex} onChange={e => setDeleteIndex(e.target.value)}>\n              <option value=\"-1\">Select Rule</option>\n              {rules.map((_, index) => <option value={index}>Rule {index + 1}</option>)}\n            </select> \n            <Button variant=\"danger\" size=\"sm\" style={{ marginLeft: \"8px\" }} onClick={() => {deleteByKey()}}>Delete</Button>\n          </h6>\n          \n        </Card.Body>\n      </Card>\n\n      <Card style={{ width: '80%', maxWidth: '850px', margin: 'auto', padding: '10px', marginTop: '20px' }}>\n        <Card.Title style={{ paddingLeft: '20px', marginBottom: '0px', marginTop: '4px' }}>\n          Export\n        </Card.Title>\n        <Card.Body>\n          <p>\n            Copy and paste the entire selection into Discord. If your server uses a prefix besides <code>$</code>, you'll have to replace the first character\n            with your prefix.\n          </p>\n          <p>\n            Year of 1A Term: <input type=\"text\" value={firstYear} onChange={(e) => setFirstYear(Number(e.target.value.replace(/[^0-9]/g, '')))} />\n          </p>\n          <textarea value={\"$verifyrules \" + formatExport()} style={{ userSelect: \"text\", width: \"100%\", height: \"200px\" }} readOnly/>\n          Characters: {formatExport().length + 13}/2000 (Discord has a 2000 character limit - you won't be able to import anything above that)\n        </Card.Body>\n      </Card>\n      \n      <Card style={{ width: '80%', maxWidth: '850px', margin: 'auto', padding: '10px', marginTop: '20px' }}>\n        <Card.Title style={{ paddingLeft: '20px', marginBottom: '0px', marginTop: '4px' }}>\n          Import\n        </Card.Title>\n        <Card.Body>\n          <p>\n            Import an existing set of rules to edit. This will append new rules, and won't overwrite what you already have. You can get the current ruleset by using the <code>$verifyrules</code> command.\n            If nothing happens, the imported ruleset is invalid; please make sure you copy and pasted it exactly.\n          </p>\n          <textarea value={importVal} style={{ userSelect: \"text\", width: \"100%\", height: \"200px\" }} onChange={e => setImportVal(e.target.value)} />\n          <Button type=\"submit\" onClick={importValues}>Import</Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}